apply plugin: 'com.android.model.application'

def sakuraCorePath = "../../../sakura/"

def getCoreAbsolutePath() {
    File curDir = file('./')
    curDir = file(curDir.absolutePath)
    String absolutePath = curDir.absolutePath + "../../../sakura/"
    return absolutePath
}

def getExternalAbsolutePath() {
    return getCoreAbsolutePath() + "../../../external"
}

model {
    repositories {
        prebuiltStatic(PrebuiltLibraries) {
            curl {
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file(getExternalAbsolutePath() + "/curl/prebuilt/Android/${targetPlatform.getName()}/libcurl.a")
                }
            }

            ssl {
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file(getExternalAbsolutePath() + "/curl/prebuilt/Android/${targetPlatform.getName()}/libssl.a")
                }
            }

            crypto {
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file(getExternalAbsolutePath() + "/curl/prebuilt/Android/${targetPlatform.getName()}/libcrypto.a")
                }
            }

            websockets {
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file(getExternalAbsolutePath() + "/websockets/prebuilt/Android/${targetPlatform.getName()}/libwebsockets.a")
                }
            }
        }
    }

    android {
        compileSdkVersion = 21
        buildToolsVersion = "23.0.1"

        defaultConfig.with {
            applicationId = "com.sakura"
            minSdkVersion.apiLevel = 14
            targetSdkVersion.apiLevel = 14
            versionCode = 21
            versionName = "v3.7.0"
        }

        tasks.withType(JavaCompile) {
            //指定编译JDK版本
            sourceCompatibility = JavaVersion.VERSION_1_7
            targetCompatibility = JavaVersion.VERSION_1_7
        }
    }

    android.ndk {
        moduleName = "sakura"
        cppFlags.add("-std=gnu++11")
        cppFlags.add("-fexceptions")
        stl = 'gnustl_static'
        ldLibs.add("log")
        ldLibs.add("z")
        ldLibs.add("m")
        toolchainVersion = "4.9"
        platformVersion = 14
        abiFilters.add("armeabi")

        CFlags.add("-D NS_SKR_BEGIN")
        CFlags.add("-D NS_SKR_END")
        CFlags.add("-D USING_NS_SKR")

        cppFlags.add("-D __GXX_EXPERIMENTAL_CXX0X__")
        cppFlags.add("-D __STDC_CONSTANT_MACROS")
        cppFlags.add("-D SKR_PLATFORM=SKR_PLATFORM_ANDROID")

        cppFlags.add("-I${file("../../..")}".toString())
        cppFlags.add("-I${file("${sakuraCorePath}")}".toString())
        cppFlags.add("-I${file("${sakuraCorePath}/../external")}".toString())
        cppFlags.add("-I${file("${sakuraCorePath}/../external/openssl/prebuilt/android/include")}".toString())
        cppFlags.add("-I${file("${sakuraCorePath}/../external/curl/curl")}".toString())
        cppFlags.add("-I${file("${sakuraCorePath}/../external/curl/curl/android/curl")}".toString())
        cppFlags.add("-I${file("${sakuraCorePath}/../external/websockets/include/android")}".toString())
    }

    android.sources {
        main {
            jni {
                source {
                    srcDirs "../../../proj.android/jni",
                            "${sakuraCorePath}",
                            "${sakuraCorePath}/../external/json11"

                    exclude "**/win32/*.cc",
                            "**/cocoa/*.mm",
                            "**/cocoa/*.cc"
                }

                dependencies {
                    library "websockets"
                    library "curl"
                    library "ssl"
                    library "crypto"
                }
            }
        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file("proguard-rules.pro"))
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:21.0.3'
}
